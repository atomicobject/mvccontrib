// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace T4MVCHostMvcApp.Areas.Break.Controllers {
    public partial class PostController {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PostController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result) {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ActionWithBindPrefixAttribute() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ActionWithBindPrefixAttribute);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ActionWithBindNoPrefixAttribute() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ActionWithBindNoPrefixAttribute);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult ActionThatTakesAnObject() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.ActionThatTakesAnObject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CompiledControllerVirtualMethod2() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod2);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult SameProjectBaseControllerMethod() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.SameProjectBaseControllerMethod);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public System.Web.Mvc.ActionResult CompiledControllerVirtualMethod() {
            return new T4MVC_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PostController Actions { get { return MVC.@break.Post; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "break";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Post";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass {
            public readonly string Index = "Index";
            public readonly string ActionWithBindPrefixAttribute = "ActionWithBindPrefixAttribute";
            public readonly string ActionWithBindNoPrefixAttribute = "ActionWithBindNoPrefixAttribute";
            public readonly string ActionThatTakesAnObject = "ActionThatTakesAnObject";
            public readonly string CompiledControllerVirtualMethod2 = "CompiledControllerVirtualMethod2";
            public readonly string SameProjectBaseControllerMethod = "SameProjectBaseControllerMethod";
            public readonly string CompiledControllerVirtualMethod = "CompiledControllerVirtualMethod";
        }


        static readonly ViewNames s_views = new ViewNames();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewNames Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewNames {
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class T4MVC_PostController: T4MVCHostMvcApp.Areas.Break.Controllers.PostController {
        public T4MVC_PostController() : base(Dummy.Instance) { }

        public override System.Web.Mvc.ActionResult Index() {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.Index);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ActionWithBindPrefixAttribute(string fieldName) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ActionWithBindPrefixAttribute);
            callInfo.RouteValueDictionary.Add("newParamName", fieldName);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ActionWithBindNoPrefixAttribute(string fieldName) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ActionWithBindNoPrefixAttribute);
            callInfo.RouteValueDictionary.Add("fieldName", fieldName);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult ActionThatTakesAnObject(T4MVCHostMvcApp.Areas.Break.Controllers.MyParamObject p) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.ActionThatTakesAnObject);
            callInfo.RouteValueDictionary.Add("p", p);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CompiledControllerVirtualMethod2(string s) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod2);
            callInfo.RouteValueDictionary.Add("s", s);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult SameProjectBaseControllerMethod(string s) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.SameProjectBaseControllerMethod);
            callInfo.RouteValueDictionary.Add("s", s);
            return callInfo;
        }

        public override System.Web.Mvc.ActionResult CompiledControllerVirtualMethod(int n) {
            var callInfo = new T4MVC_ActionResult(Area, Name, ActionNames.CompiledControllerVirtualMethod);
            callInfo.RouteValueDictionary.Add("n", n);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
